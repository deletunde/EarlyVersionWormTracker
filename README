Early Version Worm Tracker================March 15, 2012This data acquisition code is distributed for completeness at the request of our reviewers. We do not recommend that you use this code to acquire data. In the years since we built our system in 2004, several other labs have created and distributed worm tracking software. Those packages are both more user-friendly and better-supported than this set of functions. Instead of this code, we recommend one of the following:Caltech Nematode Movement Analysis Systemhttp://wormlab.caltech.edu/publications/download.htmlArena Worm Trackerhttp://bargmann.rockefeller.edu/arenawormtracker/Goodman Lab Tracker (most similar to ours)http://wormsense.stanford.edu/tracker/We provide this code as is, and because these other packages exist and are to be preferred, we have done minimal work to try to make this portable and user-friendly. The following is a description of what should be done to get this code working, should you choose to use it. This code reconstructs a set of worm tracks from a video of worms on a plate. It requires the image processing toolbox for MATLAB.We acquired video frames at 1Hz using a standard CCD camera and acquisition software, and saved that to a file. That should be read into MATLAB and formatted into a 4-dimensional Y-by-X-by-1-by-T array of intensities, where X is the image width, Y is the image height, and T is the number of frames. That array, ST, is the argument for the function 'processimagessmall.m'. The output of that function is an array of structures. Each element in the array is a single worm track, according to the parameters in the various functions included. The fields of the structure are 'x', 'y', 'f', and 'num'. The fields x and y are arrays of the x and y positions of the worm centroids, while f contains an array of the frame numbers associated with those positions. 'num' contains an integer with the length of x, y, and f (all the same, clearly). We performed all our analysis on data in the form of these reconstructed tracks.The code was custom written to find the worm centroids in each frame, and then the Crocker algorithm was used to match centroids over frames into trajectories (see citation below). That code was modified mildly from code available on the Weeks website:http://www.physics.emory.edu/~weeks/idl/License:--------track.m is copyrighted by John C. Crocker and released by a custom open-source license. See track.m for further information.All other source code is copyright Damon Clark and released under the GNU General Public License. See license.txt.Citations:----------Crocker JC, Grier DG. Methods of digital video microscopy for colloidal studies. J Colloid Interface Sci 179: 298-310, 1996.
